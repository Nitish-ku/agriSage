CREATE TABLE public.risk_predictions (
    id bigint NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    user_id uuid,
    crop text,
    location text,
    season text,
    temperature double precision,
    humidity double precision,
    ph_level double precision,
    overall_risk text,
    weather_risk text,
    disease_risk text,
    soil_risk text,
    recommendations text,
    confidence double precision
);

ALTER TABLE public.risk_predictions OWNER TO postgres;

ALTER TABLE public.risk_predictions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.risk_predictions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.risk_predictions
    ADD CONSTRAINT risk_predictions_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.risk_predictions
    ADD CONSTRAINT risk_predictions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;

-- Enable Row Level Security
ALTER TABLE public.risk_predictions ENABLE ROW LEVEL SECURITY;

-- Create policy so users can only see their own predictions
CREATE POLICY "Users can view their own risk predictions"
ON public.risk_predictions FOR SELECT
USING (auth.uid() = user_id);

-- Create policy so users can insert their own predictions
CREATE POLICY "Users can insert their own risk predictions"
ON public.risk_predictions FOR INSERT
WITH CHECK (auth.uid() = user_id);
